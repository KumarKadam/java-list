user name - DEI4Kumar@mailinator.com
password - 123456



1. find even or odd number 
 2. find all even numbers between 0-100
 3. find number is prime or not 
 4. swap 2 numbers without using 3rd variable 
 5. java code to find vowel or consonant 
 6. find largest among three number 
 7. program to check leap year or not 
 8. fibonacci series 
 9. java program to reverse number 
 9. calculate average of numbers in arrays int arr[] = {34,44,56,22,12};
 10. java program to calculate number of vowel or consonant in string/arrays
 11. Convert string value to int/short
 12. count number of digit,lowercaseletter,uppercase letter, specialCharacter in char array = {'a','2','B','q','4','F'};
 13. percentage of digit,lowercaseletter,uppercase, special symbol letter in char array = {'a','2','B','q','4','F'}; 
 14. percentage of digit,lowercaseletter,uppercase letter in string str = "india is my country 3454564 dfghrtherth 567678 drfhft BBCH"
 15. find number of time "AB" in string str = "ABBBDFJGGDFABFJFHYDAB";
 16. Reverse given string str = "India is my country"; and array
 17. Reverse each word of string str = "India is my country" output= "aidnI si ym yrtnuoc"
 18. Number of occurance of substring from given string String given = "My name is vijay. vijay is boy. vijay play cricket."  substring - vijay
 19. pattern codes
 20. A-Z using 6*6 stars
 21. Calculate number of time chasracter occurs in String
 22. sort given string a) using array  b) using collection
 23. print substring between "AB" in string str = "ABBBDFJGGDFABFJFHYDAB";
 24. swap two string 1. Using third string 2. without third string
 25. Pallendrom strint abba = abba
 26. pallendrom number 353
 27. Conver string to array and array to string without methods


1.What is java?
  language and platform

2.Applications of Java- WebBased Application, Mobile Application, Desktop Applications, Gaming, etc.

3.Features of Java-Simple,Object-Oriented, Portable,Platform Independent,Secure,High performance,Multithreaded etc.

4.What is JVM, jre and JDK?

 4.1 How to install Java
 https://www.guru99.com/install-java.html

 https://www.oracle.com/java/technologies/downloads/#java8
 4.2 How to iunstall Eclipse
 https://www.guru99.com/install-eclipse-java.html
 https://www.eclipse.org/

5. Data types
   Primitive data types: The primitive data types include boolean, char, byte, short, int, long, float and double.
   Non-primitive data types: The non-primitive data types include Classes, Strings, Interfaces, and Arrays.


6.what is  Class, Object and Method?
  class has -Modifiers,Class name,Superclass(if any),Interfaces(if any),Body-- class is group of object. class in java can content field, method, constructor,block,nested clss.
  Method has- Modifiers,static or nothing, return type,arguments and Body--  it is block of code toghether to perform certain task or operation.
  Object has- state/properties and Behaviour-- an indentity that has state & behavior is know as object.

7.Naming Convention in Java.
  • Class name Should always start with Uppercase.
  • Method should start with lower case.
  • Package name should always be lowercase.
  • Constant should be in uppercase.
  Rules for Naming:
 All identifiers should begin with a letter (A to Z or a to z), currency character ($) or an underscore (_).

• After the first character, identifiers can have any combination of characters.

 • A keyword cannot be used as an identifier.

 • Most importantly, identifiers are case sensitive.

 • Examples of legal identifiers: age, $salary, _value, __1_value.

 • Examples of illegal identifiers: 123abc, -salary.

8.Types of Veriables (static keyword)
  local veriables--- local variable which are declard inside of method body.. we can't used these varialbes outside of that method.
  instance veriables -- the verivalbe which are decalred to class level & outside the method.. which is called as global or instance variable ..non static variable
  static veriables -- the veriables which declarded on clss level with using static keyword .. these are directly call on any method (static/non static method)

 9. Operators in Java

	 Arithmatic operator
	   +,-,*,/,%

	 Relational operator
	   <,>,<=,>=,==,!=

	 Unary operator
	   exp++,exp--,++exp,--exp,~,!

	 Bitwise Operators
	   &,^,|

	 Logical operators
	   && , ||

	 Shift Operators
	   <<,>>

	 Assignment Operators
	   = ,+= ,-= ,*= ,/= ,%= , <<= ,>>=  

	 Ternery Operators (if-then-else)
	  ? :

10. Decision Making/Control statements in Java

	 If statements- 
	  if, if-else, if-else-ladder, nested-if

	 method with parameter

	 Switch statement- switch fall through, switch, nested switch

	 Arrays in Java---int a[] = new int[5];

	 for loops- for loop, nested for loop, Labeled for loop ,for each loop

	 while loops- while, do-while

	 java break and continue

10.2 Scope of veriable -- 

11. return types in java

11.2 Scanner in java

12. Constructors in java- default constructor, parameterized constructor  
     How constructors are different from methods in Java?
     • Constructor(s) must have the same name as the class within which it defined while it is not necessary for the method in java.
     • Constructor(s) do not return any type while method(s) have the return type or void if does not return any value.
     • Constructor is called only once at the time of Object creation while method(s) can be called any numbers of time

13. "this" key word in java
     Usage of java this keyword
     1. this can be used to refer current class instance variable.
     2. this can be used to invoke current class method 
     3. this() can be used to invoke current class constructor.
     4. this can be passed as an argument in the method call.
     5. this can be passed as argument in the constructor call.
     6. this can be user as return type in method

OOPS (Inheritance,Polymorphism,Abstraction and Encapsulation)

14. Inheritance in Java

Polymorphism

15. Method overloading in java-- compile time polymorphism

16. method Overriding in java-- run time polymorphism

17. Super keywork in java

18. Interface-cannot instantiate

19. Abstract class-cannot instantiate, contructor 

20 Abstraction in java

21. Access modifiers private, default, protected and public

22. Enum data type

23. final keyword

24. Encapsulation in java

25. Wrapper classes in java

26. String in java, String buffer-synchronised & String builder
// charAt(), length(),endsWith(" "),startsWith(),replace(),trim(),split(" "),subString(),contains(),equals(),
		//concate(),equalsIgnoreCase(String another),toLowerCase(),toUpperCase()

27.Exceptions in java

   exception handaling try-catch, try-multiple catch, nested try catch

28. throw and throws in java

28.b finally

29. Collection in java
ArrayList- duplicate , LinkedList-duplicate, Hashset-no duplucate,no incertion order,LinkedhashSet-no duplucate,incertion order, 
treeSet-no duplucate, acending order

30.Iterator in collection

31. HashMap- No incertion order

program for largest number from three------

public class largestNumber(){

public static void main (string[]args) {

int a = 45;
int b= 35;
int c= 30;

if (a>=b && a>=c){
system.out.println(" A is largest number");
} else if (b>=a && b>=c) {
system.out.println( " B is largest number");
} else {
system.out.println ( "c is largest number");

}}}



program for reverse number using for loop -----


class Main {
  public static void main(String[] args) {
    
    int num = 1234567, reversed = 0;

    for(;num != 0; num /= 10) {
      int digit = num % 10;
      reversed = reversed * 10 + digit;
    }

    System.out.println("Reversed Number: " + reversed);
  }
}   

class main{

public static void main (String[] args) {
int num = 1234567, reversed = 0;

for (; num!=0; num/=10)
{ int digit = num%10;
reversed = reversed *10 +digit;
}

system.out.println ("reversed number: " + reversed);

}}


	 //count number of digit,lowercaseletter,uppercase letter, specialCharacter in char array = {'a','2','B','q','4','F'}
		
		char array[] ={'a','2','B','q','4','F','@','#'};
		
		int num = 0;
		int lower = 0;
		int upper = 0;
		int special = 0;
		
		for (int i= 0; i<array.length;i++) {
			if (array[i]>='0' && array[i]<='9') {
				num++;
			} else if
			
				(array[i]>='a' && array[i]<='z'){
					lower++;
				} else if (array[i]>='A' && array[i]<='Z') {
					upper++;
					
			} else {
				special++;
			}
		} System.out.println("number = " + num);
		System.out.println("lower = " + lower);
		System.out.println("upper = " + upper);
		System.out.println("special = " + special);
	}

}

/count number of digit,lowercaseletter,uppercase letter, specialCharacter in string array = {'a','2','B','q','4','F'}
		
		String str = "kowk8298*^6UOE0w0LPlsksl9w099&#()";
		float num = 0;
		float upper = 0;
		float lower = 0;
		float special = 0;

		for (int i = 0; i < str.length(); i++) {

			if (str.charAt(i) >= 48 && str.charAt(i) <= 57) {

				num++;
			} else if (str.charAt(i) >= 'a' && str.charAt(i) <= 'z') {

				lower++;
			} else if (str.charAt(i) >= 'A' && str.charAt(i) <= 'Z') {

				upper++;
			} else {
				special++;
			}
		}

	
		 System.out.println("Number% = " + (num*100/str.length())); 
		 System.out.println("Upper% = " +(upper*100/str.length())); 
		 System.out.println("Lower% = " + (lower*100/str.length()));
		  System.out.println("Special% = " + (special*100/str.length()));
		 
		
		
	}}

 swap two numbers ---------
	int x= 32;
		int y = 26;
		
		System.out.println("x = "+x + " y = " +y);
		
		x = x+y;
		
		y= x-y;
		System.out.print("y= " + y);
		x= x-y;
		System.out.print("   x = " + x);
			
	}




Date -- 6/4/2022 
Access modifier 
private - within same class
public - everiwhere
default - within package
protected - within package and outside package only through inheritance


name - kumar kadam
